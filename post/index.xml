<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>https://whyzzd.github.io/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 08 Jul 2021 00:11:15 +0800</lastBuildDate><atom:link href="https://whyzzd.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Qt项目 多文档编辑器SimNotePad</title>
      <link>https://whyzzd.github.io/2021/07/qt%E9%A1%B9%E7%9B%AE-%E5%A4%9A%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91%E5%99%A8simnotepad/</link>
      <pubDate>Thu, 08 Jul 2021 00:11:15 +0800</pubDate>
      
      <guid>https://whyzzd.github.io/2021/07/qt%E9%A1%B9%E7%9B%AE-%E5%A4%9A%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91%E5%99%A8simnotepad/</guid>
      <description>本文将大致介绍SimNotePad的设计思路以及在这个过程中遇到的困难和如何去解决的，对于某些关键点我会详细的说明，源码和打包好的作品见文末链接。
一、项目展示 1.界面展示 界面比较简约，默认情况下是没有像Notepad会直接新建一个无名文件，需要手动新建。
2.功能模块展示(gif动图) 新建文件
打开文件
保存文件
如果文件未命名那么保存需要指定保存的路径和文件名，如果在已有文件名的基础上保存那么可直接保存至对应的文件。
另存为
编码格式测试
同一种格式的文件利用不同的格式打开效果不一样，第二次设置编码格式后显示了乱码。
关闭文档测试
其它功能展示
二、结构分析 1.目录结构 2.主要的类及对象之间的关系 三、源码分析 由于篇幅有限，所以这里就只放了头文件
mainwindow.h:
#ifndef MAINWINDOW_H #define MAINWINDOW_H #include &amp;lt;QMainWindow&amp;gt;#include&amp;lt;QLabel&amp;gt;#include&amp;#34;subtext.h&amp;#34;QT_BEGIN_NAMESPACE namespace Ui { class MainWindow; } QT_END_NAMESPACE class MainWindow : public QMainWindow { Q_OBJECT public: MainWindow(QWidget *parent = nullptr); ~MainWindow(); void init(); void closeEvent(QCloseEvent *event); private slots: //槽函数看着很多，但是实际写好其中的几个，其它的都差不多了  void initNewAndOpen(SubText*); void doProcessTriggeredByNew(bool); void doProcessTriggeredByOpen(bool); void doProcessTriggeredByUTF_8(bool); void doProcessTriggeredByGB2312(bool); void doProcessTriggerByExit(bool); void doProcessTriggerBySave(bool); void doProcessTriggerBySaveAs(bool); void doProcessTriggerByClose(bool); void doProcessTriggerByCloseAll(bool); void doProcessTriggerByTile(bool); void doProcessTriggerByCascade(bool); void doProcessTriggerByNext(bool); void doProcessTriggerByPrevious(bool); void doProcessTriggerByAbout(bool); void doProcessTriggerByAboutQt(bool); void doProcessTriggerByRedo(bool); void doProcessTriggerByUndo(bool); void doProcessTriggerByCut(bool); void doProcessTriggerByCopy(bool); void doProcessTriggerByParse(bool); private: Ui::MainWindow *ui; QString codeName; QLabel *m_CodeName; QLabel *m_CursorPositionLines; QLabel *m_CursorPositionCol; }; #endif // MAINWINDOW_H subtext.</description>
    </item>
    
    <item>
      <title>使用qt官方生成安装包工具</title>
      <link>https://whyzzd.github.io/2021/07/%E4%BD%BF%E7%94%A8qt%E5%AE%98%E6%96%B9%E7%94%9F%E6%88%90%E5%AE%89%E8%A3%85%E5%8C%85%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Thu, 08 Jul 2021 00:10:43 +0800</pubDate>
      
      <guid>https://whyzzd.github.io/2021/07/%E4%BD%BF%E7%94%A8qt%E5%AE%98%E6%96%B9%E7%94%9F%E6%88%90%E5%AE%89%E8%A3%85%E5%8C%85%E5%B7%A5%E5%85%B7/</guid>
      <description>使用qt官方生成安装包工具
生成安装包的核心命令 在C:\Qt\QtIFW-4.1.1\examples\tutorial下输入
C:\Qt\QtIFW-4.1.1\bin\binarycreator.exe --offline-only -t C:\Qt\QtIFW-4.1.1\bin\installerbase.exe -c config\config.xml -p packages NotePad.exe
具体过程参考博文：
https://www.jianshu.com/p/039632e5f924</description>
    </item>
    
    <item>
      <title>Qt使用MySql数据库</title>
      <link>https://whyzzd.github.io/2021/07/qt%E4%BD%BF%E7%94%A8mysql%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Thu, 08 Jul 2021 00:10:09 +0800</pubDate>
      
      <guid>https://whyzzd.github.io/2021/07/qt%E4%BD%BF%E7%94%A8mysql%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>在qt上使用MySql的注意事项
1.MySql创建库，创建表，插入，以及查找命令 2.安装过程中注意事项 在qt5.12以上中使用mysql除了按照https://www.codenong.com/cs106561773/这上面做完之后，接着在MySql的安装中(例：C:\Program Files\MySQL\MySQL Server 5.7\lib)复制一份libmysql.dll到qt的安装目录下(例：D:\Qt\Qt5.12.10\5.12.10\mingw73_64\bin)再使用程序不会报错。
实例代码请参考：demo</description>
    </item>
    
    <item>
      <title>MacOs使用hugo、github搭建个人博客</title>
      <link>https://whyzzd.github.io/2021/07/macos%E4%BD%BF%E7%94%A8hugogithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Fri, 02 Jul 2021 16:48:36 +0800</pubDate>
      
      <guid>https://whyzzd.github.io/2021/07/macos%E4%BD%BF%E7%94%A8hugogithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;p&gt;本文将介绍利用hugo搭建个人博客的关键点以及踩过的坑。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>基于多态的职工管理系统的思路及源码分析</title>
      <link>https://whyzzd.github.io/2021/07/%E5%9F%BA%E4%BA%8E%E5%A4%9A%E6%80%81%E7%9A%84%E8%81%8C%E5%B7%A5%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%80%9D%E8%B7%AF%E5%8F%8A%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Thu, 01 Jul 2021 16:41:52 +0800</pubDate>
      
      <guid>https://whyzzd.github.io/2021/07/%E5%9F%BA%E4%BA%8E%E5%A4%9A%E6%80%81%E7%9A%84%E8%81%8C%E5%B7%A5%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%80%9D%E8%B7%AF%E5%8F%8A%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;本文是对前段时间刚学习的小项目之一&amp;mdash;-职工管理系统的设计思路、具体代码的编写进行较为详细的整理。一可以对自己的C++的知识进行再进行强化，另一方面也可以为正在学习这块知识的人提供一些帮助。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>基于Qt的Tcp简单通信示意图及代码实现</title>
      <link>https://whyzzd.github.io/2021/07/%E5%9F%BA%E4%BA%8Eqt%E7%9A%84tcp%E7%AE%80%E5%8D%95%E9%80%9A%E4%BF%A1%E7%A4%BA%E6%84%8F%E5%9B%BE%E5%8F%8A%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Thu, 01 Jul 2021 15:10:02 +0800</pubDate>
      
      <guid>https://whyzzd.github.io/2021/07/%E5%9F%BA%E4%BA%8Eqt%E7%9A%84tcp%E7%AE%80%E5%8D%95%E9%80%9A%E4%BF%A1%E7%A4%BA%E6%84%8F%E5%9B%BE%E5%8F%8A%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;p&gt;客户端和服务器之间进行通信&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
